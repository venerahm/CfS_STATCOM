}
for (column in 6:7){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column + 24]])
}
}
print(table(combined))
}
for (column in 6:7){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
}
sum(is.na(df[[13]]))
df
df
is.na(df[, 4:5])
sum(is.na(df[, 4:5]))
for(i in length(family)){
if(i > 1){
df = family[[i]]
if(length(df) == 26){
print(sum(is.na(df[, 4:12])))
}
}
}
for(i in 1:length(family)){
if(i > 1){
df = family[[i]]
if(length(df) == 26){
print(sum(is.na(df[, 4:12])))
}
}
}
for(i in 1:length(family)){
if(i > 1){
df = family[[i]]
if(length(df) == 52){
print(sum(is.na(df[, 6:14])))
}
if(length(df) == 26){
print(sum(is.na(df[, 4:12])))
}
}
}
family[[16]]
mentor = multiplesheets("./Data/CFSN Mentor Feedback Survey 23-24 (Responses).xlsx")
for (column_index in 4:14){
likert = unlist(lapply(mentor, function(df) df[column_index]))
print(colnames(mentor[[1]])[column_index])
# print(table(likert))
# Get the column name
col_name <- colnames(mentor[[1]])[column_index]
# Extract the text inside square brackets
title_text <- sub(".*\\[(.*)\\].*", "\\1", col_name)
# Set factor levels to include all response options from 1 to 5
likert <- factor(likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3], percent_table[4] + percent_table[5])
print(percent_table_grouped)
}
for (column_index in 4:14){
likert = unlist(lapply(mentor, function(df) df[column_index]))
print(colnames(mentor[[1]])[column_index])
print(table(likert))
# Get the column name
col_name <- colnames(mentor[[1]])[column_index]
# Extract the text inside square brackets
title_text <- sub(".*\\[(.*)\\].*", "\\1", col_name)
# Set factor levels to include all response options from 1 to 5
likert <- factor(likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3], percent_table[4] + percent_table[5])
print(percent_table_grouped)
}
for (column_index in 4:14){
likert = unlist(lapply(mentor, function(df) df[column_index]))
print(colnames(mentor[[1]])[column_index])
print(sum(table(likert)))
# Get the column name
col_name <- colnames(mentor[[1]])[column_index]
# Extract the text inside square brackets
title_text <- sub(".*\\[(.*)\\].*", "\\1", col_name)
# Set factor levels to include all response options from 1 to 5
likert <- factor(likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3], percent_table[4] + percent_table[5])
print(percent_table_grouped)
}
for(i in 1:length(mentor)){
if(i > 1){
if(length(df) == 52){
print(sum(is.na(df[, 4:14])))
}
}
}
for(i in 1:length(mentor)){
if(i > 1){
df = family[[i]]
if(length(df) == 52){
print(sum(is.na(df[, 4:14])))
}
}
}
for(i in 1:length(mentor)){
if(i > 1){
df = mentor[[i]]
if(length(df) == 52){
print(sum(is.na(df[, 4:14])))
}
}
}
for(i in 1:length(mentor)){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[, 4:14])))
}
}
mentor[[2]]
mentor[[3]]
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[, 4:14])))
}
}
mentor[[3]][, 4:14]
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[1, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[2, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[1:10, 4:14])))
}
}
mentor[[3]][, 4:14]
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[, 4:14])))
}
}
length(mentor[[3]])
nrow(mentor[[3]])
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[1:19, 4:14])))
}
}
mentor[[4]]
mentor[[4]][, 4:14]
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[18:19, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[11:17, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[11:12, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[13:17, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[13:14, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[15:17, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[15:16, 4:14])))
}
}
mentor[[3]][15:16, 4:14]
mentor[[3]][15:16, 5]
mentor[[3]][15:17, 5]
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[15, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[16, 4:14])))
}
}
mentor[[3]][16, 5]
mentor[[3]][16, 4:14]
mentor = multiplesheets("./Data/CFSN Mentor Feedback Survey 23-24 (Responses).xlsx")
for(i in 1:length(mentor)){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[, 5])))
}
}
mentor[[6]]
mentor[[7]]
for (column_index in 4:14){
likert = unlist(lapply(mentor, function(df) df[column_index]))
print(colnames(mentor[[1]])[column_index])
# Get the column name
col_name <- colnames(mentor[[1]])[column_index]
# Extract the text inside square brackets
title_text <- sub(".*\\[(.*)\\].*", "\\1", col_name)
# Set factor levels to include all response options from 1 to 5
likert <- factor(likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3], percent_table[4] + percent_table[5])
print(percent_table_grouped)
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
print(sum(table(combined)))
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '2 - Disagree', '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
print(freq_table)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3], percent_table[4] + percent_table[5])
# print(percent_table_grouped)
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '2 - Disagree', '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
print(freq_table)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2] + percent_table[3], percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
print(freq_table)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
5/41
36/41
5/41
36/41
5/38
33/38
3/38
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
print(freq_table)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
for(i in 1:length(family)){
df = family[[i]]
if(length(df) == 52){
print(sum(is.na(df[, 6:14])))
}
if(length(df) == 26){
print(sum(is.na(df[, 4:12])))
}
}
