}
}
length(mentor[[3]])
nrow(mentor[[3]])
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[1:19, 4:14])))
}
}
mentor[[4]]
mentor[[4]][, 4:14]
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[18:19, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[11:17, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[11:12, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[13:17, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[13:14, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[15:17, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[15:16, 4:14])))
}
}
mentor[[3]][15:16, 4:14]
mentor[[3]][15:16, 5]
mentor[[3]][15:17, 5]
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[15, 4:14])))
}
}
for(i in 3:4){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[16, 4:14])))
}
}
mentor[[3]][16, 5]
mentor[[3]][16, 4:14]
mentor = multiplesheets("./Data/CFSN Mentor Feedback Survey 23-24 (Responses).xlsx")
for(i in 1:length(mentor)){
if(i > 1){
df = mentor[[i]]
print(sum(is.na(df[, 5])))
}
}
mentor[[6]]
mentor[[7]]
for (column_index in 4:14){
likert = unlist(lapply(mentor, function(df) df[column_index]))
print(colnames(mentor[[1]])[column_index])
# Get the column name
col_name <- colnames(mentor[[1]])[column_index]
# Extract the text inside square brackets
title_text <- sub(".*\\[(.*)\\].*", "\\1", col_name)
# Set factor levels to include all response options from 1 to 5
likert <- factor(likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3], percent_table[4] + percent_table[5])
print(percent_table_grouped)
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
print(sum(table(combined)))
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
df = df[1:15, ] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
}
for (column in 6:14){
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '2 - Disagree', '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
print(freq_table)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3], percent_table[4] + percent_table[5])
# print(percent_table_grouped)
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '2 - Disagree', '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
print(freq_table)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2] + percent_table[3], percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
print(table(combined))
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
print(freq_table)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
5/41
36/41
5/41
36/41
5/38
33/38
3/38
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
print(freq_table)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]] # The last row in the first sheet has incomplete answer and the student name is test, so I eliminate the answer.
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
for(i in 1:length(family)){
df = family[[i]]
if(length(df) == 52){
print(sum(is.na(df[, 6:14])))
}
if(length(df) == 26){
print(sum(is.na(df[, 4:12])))
}
}
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(ggplot2)
mentee = read_excel("./Data/23-24 CFSN Student Feedback Survey + Mentor Assistance (Responses).xlsx")
mentor = read_excel("./Data/CFSN Mentor Feedback Survey 23-24 (Responses).xlsx")
multiplesheets <- function(fname) {
# getting info about all excel sheets
sheets <- readxl::excel_sheets(fname)
tibble <- lapply(sheets, function(x) readxl::read_excel(fname, sheet = x))
data_frame <- lapply(tibble, as.data.frame)
# assigning names to data frames
# names(data_frame) <- sheets
# print data frame
# print(data_frame)
}
mentee = multiplesheets("./Data/23-24 CFSN Student Feedback Survey + Mentor Assistance (Responses).xlsx")
mentor = multiplesheets("./Data/CFSN Mentor Feedback Survey 23-24 (Responses).xlsx")
family  = multiplesheets("./Data/CFSN Family Feedback Survey 23-24 (Responses).xlsx")
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
for (column in 6:14){
print(colnames(family[[1]])[column])
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
}
mentee_index = 17
mentee_likert = unlist(lapply(mentee, function(df) df[mentee_index]))
likert <- factor(mentee_likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
mentee_freq_table = table(likert)
mentee_percent_table = mentee_freq_table/sum(mentee_freq_table) * 100
print(mentee_percent_table)
mentor_index = 4
mentor_likert = unlist(lapply(mentor, function(df) df[mentor_index]))
likert <- factor(mentor_likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
mentor_freq_table = table(likert)
mentor_percent_table = mentor_freq_table/sum(mentor_freq_table) * 100
print(mentor_percent_table)
response = rep(c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'), 2)
role = rep(c("Mentee", "Mentor"), each = length(mentor_percent_table))
data = data.frame(Percent = c(as.numeric(mentee_percent_table), as.numeric(mentor_percent_table)), Response = response, Role = role)
data
data_grouped <- data %>%
mutate(
GroupedResponse = case_when(
Response %in% c("5 - Strongly Agree", "4 - Agree") ~ "Agree/Strongly Agree",
Response %in% c("1 - Strongly Disagree", "2 - Disagree") ~ "Disagree/Strongly Disagree",
TRUE ~ "Neutral"
)
) %>% group_by(Role, GroupedResponse) %>%
summarize(Percent = sum(Percent))
# Summarize the percentages for the grouped responses
data_grouped
data_grouped$GroupedResponse <- factor(
data_grouped$GroupedResponse,
levels = c("Disagree/Strongly Disagree", "Neutral", "Agree/Strongly Agree")
)
mentee_index = 21
mentee_likert = unlist(lapply(mentee, function(df) df[mentee_index]))
likert <- factor(mentee_likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
mentee_freq_table = table(likert)
mentee_percent_table = mentee_freq_table/sum(mentee_freq_table) * 100
print(mentee_percent_table)
mentor_index = 13
mentor_likert = unlist(lapply(mentor, function(df) df[mentor_index]))
likert <- factor(mentor_likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
mentor_freq_table = table(likert)
mentor_percent_table = mentor_freq_table/sum(mentor_freq_table) * 100
print(mentor_percent_table)
response = rep(c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'), 2)
role = rep(c("Mentee", "Mentor"), each = length(mentor_percent_table))
data = data.frame(Percent = c(as.numeric(mentee_percent_table), as.numeric(mentor_percent_table)), Response = response, Role = role)
data
data_grouped <- data %>%
mutate(
GroupedResponse = case_when(
Response %in% c("5 - Strongly Agree", "4 - Agree") ~ "Agree/Strongly Agree",
Response %in% c("1 - Strongly Disagree", "2 - Disagree") ~ "Disagree/Strongly Disagree",
TRUE ~ "Neutral"
)
) %>% group_by(Role, GroupedResponse) %>%
summarize(Percent = sum(Percent))
# Summarize the percentages for the grouped responses
data_grouped
mentee_index = 17
mentee_likert = unlist(lapply(mentee, function(df) df[mentee_index]))
likert <- factor(mentee_likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
mentee_freq_table = table(likert)
mentee_percent_table = mentee_freq_table/sum(mentee_freq_table) * 100
print(mentee_percent_table)
mentor_index = 4
mentor_likert = unlist(lapply(mentor, function(df) df[mentor_index]))
likert <- factor(mentor_likert, levels = c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'))
mentor_freq_table = table(likert)
mentor_percent_table = mentor_freq_table/sum(mentor_freq_table) * 100
print(mentor_percent_table)
response = rep(c('1 - Strongly Disagree',  '2 - Disagree', '3 - Neutral', '4 - Agree', '5 - Strongly Agree'), 2)
role = rep(c("Mentee", "Mentor"), each = length(mentor_percent_table))
data = data.frame(Percent = c(as.numeric(mentee_percent_table), as.numeric(mentor_percent_table)), Response = response, Role = role)
data
data_grouped <- data %>%
mutate(
GroupedResponse = case_when(
Response %in% c("5 - Strongly Agree", "4 - Agree") ~ "Agree/Strongly Agree",
Response %in% c("1 - Strongly Disagree", "2 - Disagree") ~ "Disagree/Strongly Disagree",
TRUE ~ "Neutral"
)
) %>% group_by(Role, GroupedResponse) %>%
summarize(Percent = sum(Percent))
# Summarize the percentages for the grouped responses
data_grouped
column = 6
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
column = 6
for(i in 1:length(family)){
if(i == 1){
df = family[[i]]
combined = ifelse(!is.na(df[[column]]), df[[column]], df[[column + 24]])
}
df = family[[i]]
if(length(df) == 52){
combined = c(combined, df[[column]])
}
if(length(df) == 26){
combined = c(combined, df[[column - 2]])
}
}
# Set factor levels to include all response options from 1 to 5
likert <- factor(combined, levels = c('1 - Strongly Disagree', '1 - Muy en desacuerdo',  '3 - Neutral', '4 - Agree', '4 - Estar de acuerdo', '5 - Strongly Agree', '5 - Totalmente de acuerdo'))
# Create a frequency table and convert to percentages
freq_table <- table(likert)
percent_table <- (freq_table / sum(freq_table)) * 100
percent_table_grouped = c(percent_table[1] + percent_table[2], percent_table[3] , percent_table[4] + percent_table[5] + percent_table[6] + percent_table[7])
print(percent_table_grouped)
rep("family", 3)
data_grouped %>% add_row(tibble_row = rep("family", 3))
data_grouped %>% bind_rows(tibble_row = rep("family", 3))
